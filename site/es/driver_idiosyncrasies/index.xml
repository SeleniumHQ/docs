<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Carácter de los controladores on Documentación de Selenium</title>
    <link>https://seleniumhq.github.io/docs/site/es/driver_idiosyncrasies/</link>
    <description>Recent content in Carácter de los controladores on Documentación de Selenium</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>2013-{year}</copyright>
    
	<atom:link href="https://seleniumhq.github.io/docs/site/es/driver_idiosyncrasies/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Capacidades compartidas</title>
      <link>https://seleniumhq.github.io/docs/site/es/driver_idiosyncrasies/shared_capabilities/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://seleniumhq.github.io/docs/site/es/driver_idiosyncrasies/shared_capabilities/</guid>
      <description>Estrategia de carga de la página (pageLoadStrategy) Al navegar a una nueva página a través de URL, por defecto Selenium esperará hasta que la página se haya cargado completamente antes de responder. Esto funciona bien para principiantes, pero puede causar largos tiempos de espera en páginas que cargan una gran cantidad de recursos de terceros. El uso de una estrategia no predeterminada puede hacer que la ejecución de la prueba sea más rápida en casos como este, pero también puede introducir inestabilidad donde los elementos en la página cambian de posición a medida que los elementos se cargan y cambian de tamaño.</description>
    </item>
    
    <item>
      <title>Capacidades especificas de los controladores</title>
      <link>https://seleniumhq.github.io/docs/site/es/driver_idiosyncrasies/driver_specific_capabilities/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://seleniumhq.github.io/docs/site/es/driver_idiosyncrasies/driver_specific_capabilities/</guid>
      <description>Firefox Definir Capacidades (Capabilities) usando FirefoxOptions FirefoxOptions es la nueva forma de definir capacidades para el navegador Firefox y, por lo general, debe usarse con preferencia a las capacidades deseadas.
Java Python C# Ruby JavaScript FirefoxOptions options = new FirefoxOptions(); options.addPreference(&amp;#34;network.proxy.type&amp;#34;, 0); driver = new RemoteWebDriver(options);   from selenium.webdriver.firefox.options import Options options = Options() options.headless = True driver = webdriver.Firefox(options=options)   // Todavía no tenemos una muestra de código C#: ayúdenos y genere un PR (_pull request_)    # Todavía no tenemos una muestra de código Ruby: ayúdenos y genere un PR (_pull request_)   // Todavía no tenemos una muestra de código JavaScript: ayúdenos y genere un PR (_pull request_)      Configuración de un perfil personalizado Es posible crear un perfil personalizado para Firefox como se muestra a continuación.</description>
    </item>
    
  </channel>
</rss>