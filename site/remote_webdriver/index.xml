<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Remote WebDriver on Selenium Documentation</title>
    <link>https://seleniumhq.github.io/docs/site/remote_webdriver/</link>
    <description>Recent content in Remote WebDriver on Selenium Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>2013-{year}</copyright>
    
	<atom:link href="https://seleniumhq.github.io/docs/site/remote_webdriver/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Remote WebDriver server</title>
      <link>https://seleniumhq.github.io/docs/site/remote_webdriver/remote_webdriver_server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://seleniumhq.github.io/docs/site/remote_webdriver/remote_webdriver_server/</guid>
      <description>The server will always run on the machine with the browser you want to test. The server can be used either from the command line or through code configuration.
Starting the server from the command line Once you have downloaded selenium-server-standalone-{VERSION}.jar, place it on the computer with the browser you want to test. Then, from the directory with the jar, run the following:
java -jar selenium-server-standalone-{VERSION}.jar Considerations for running the server The caller is expected to terminate each session properly, calling either Selenium#stop() or WebDriver#quit.</description>
    </item>
    
    <item>
      <title>Remote WebDriver client</title>
      <link>https://seleniumhq.github.io/docs/site/remote_webdriver/remote_webdriver_client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://seleniumhq.github.io/docs/site/remote_webdriver/remote_webdriver_client/</guid>
      <description>First, we need to connect to the RemoteWebDriver. We do this by pointing the URL to the address of the server running our tests. In order to customize our configuration, we set desired capabilities. Below is an example of instantiating a remote WebDriver object pointing to our remote web server, www.example.com, running our tests on Firefox.
Java Python C# Ruby JavaScript FirefoxOptions firefoxOptions = new FirefoxOptions(); WebDriver driver = new RemoteWebDriver(new URL(&amp;#34;http://www.</description>
    </item>
    
  </channel>
</rss>