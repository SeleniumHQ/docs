<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Aan de slag met WebDriver on Selenium documentatie</title>
    <link>https://seleniumhq.github.io/docs/site/nl/getting_started_with_webdriver/</link>
    <description>Recent content in Aan de slag met WebDriver on Selenium documentatie</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>2013-{year}</copyright>
    
	<atom:link href="https://seleniumhq.github.io/docs/site/nl/getting_started_with_webdriver/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Browsers</title>
      <link>https://seleniumhq.github.io/docs/site/nl/getting_started_with_webdriver/browsers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://seleniumhq.github.io/docs/site/nl/getting_started_with_webdriver/browsers/</guid>
      <description>Algemene browsers Selenium ondersteunt officieel volgende browsers:
   Browser Beheerder Ondersteunde versies     Chromium Chromium Alle versies   Firefox Mozilla 54 en nieuwer   Internet Explorer Selenium 6 en nieuwer   Opera Opera Chromium / Presto 10.5 en nieuwer   Safari Apple 10 en nieuwer    Gespecialiseerde browsers Er bestaan ook gespecialiseerde browser die enkel in ontwikkelomgevingen gebruikt worden.</description>
    </item>
    
    <item>
      <title>Externe drivers en plugins</title>
      <link>https://seleniumhq.github.io/docs/site/nl/getting_started_with_webdriver/third_party_drivers_and_plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://seleniumhq.github.io/docs/site/nl/getting_started_with_webdriver/third_party_drivers_and_plugins/</guid>
      <description>Selenium ondersteunt externe plugins. Hieronder vind je plugins die ontwikkeld zijn en onderhouden worden door externe partijen. Meer informatie omtrent het ontwikkelen van je eigen plugin of het publiceren ervan kan je de documentatie raadplegen.
Deze plugins worden niet ondersteund, onderhouden, gehost of aanbevolen door het Selenium project. De plugins die hieronder opgelijst staan, dragen niet altijd de Apache License v2.0. Sommige plugins vallen onder een andere gratis of open source licentie; anderen zijn enkel beschikbaar onder patent.</description>
    </item>
    
    <item>
      <title>Localisatie van elementen</title>
      <link>https://seleniumhq.github.io/docs/site/nl/getting_started_with_webdriver/locating_elements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://seleniumhq.github.io/docs/site/nl/getting_started_with_webdriver/locating_elements/</guid>
      <description>Localisatie van elementen  Page being translated from English to Dutch. Do you speak Dutch? Help us to translate it by sending us pull requests!
 Localisatie van elementen Een van de meest fundamentele technieken die nodig zijn om WebDriver onder de knie te krijgen, is het lokaliseren van elementen op een pagina. WebDriver beschikt over een aantal ingebouwde selector types, een van hen is het lokaliseren van een element op basis van zijn ID:</description>
    </item>
    
    <item>
      <title>Acties op de AUT*</title>
      <link>https://seleniumhq.github.io/docs/site/nl/getting_started_with_webdriver/performing_actions_on_the_aut/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://seleniumhq.github.io/docs/site/nl/getting_started_with_webdriver/performing_actions_on_the_aut/</guid>
      <description>Je kan de tekst van een element invullen aan de hand van de sendKeys methode:
Java Python C# Ruby JavaScript String name = &amp;#34;Charles&amp;#34;; driver.findElement(By.name(&amp;#34;name&amp;#34;)).sendKeys(name);   name = &amp;#34;Charles&amp;#34; driver.find_element_by_name(&amp;#34;name&amp;#34;).send_keys(name)   string name = &amp;#34;Charles&amp;#34;; driver.FindElement(By.Name(&amp;#34;name&amp;#34;)).SendKeys(name);   name = &amp;#34;Charles&amp;#34; driver.find_element(name: &amp;#34;name&amp;#34;).send_keys(name)   const name = &amp;#34;Charles&amp;#34;; await driver.findElement(By.name(&amp;#39;name&amp;#39;)).sendKeys(name);     Sommige applicaties gebruiken Javascript libraries om drag-en-drop functionaliteit toe te voegen. Hieronder vind je een simpel voorbeeld waarbij een element versleept word naar een ander element:</description>
    </item>
    
  </channel>
</rss>